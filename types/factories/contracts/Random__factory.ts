/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type { Random, RandomInterface } from "../../contracts/Random";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxValue",
        type: "uint256",
      },
    ],
    name: "generateRandoms",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61271060808181526204e2a06040529060a06204e200803683375050815161002e926000925060200190610041565b5034801561003b57600080fd5b506100a1565b82805482825590600052602060002090810192821561007c579160200282015b8281111561007c578251825591602001919060010190610061565b5061008892915061008c565b5090565b5b80821115610088576000815560010161008d565b610249806100b06000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635ea71d4614610030575b600080fd5b61004361003e366004610161565b610059565b6040516100509190610183565b60405180910390f35b60608267ffffffffffffffff811115610074576100746101c7565b60405190808252806020026020018201604052801561009d578160200160208202803683370190505b50905060003342415a6040516bffffffffffffffffffffffff19606095861b8116602083015260348201949094529190931b909116605482015260688101919091526088016040516020818303038152906040528051906020012060001c905060005b848110156101595743821161011e5761011982436101dd565b610128565b61012843836101dd565b91506101348483610204565b83828151811061014657610146610226565b6020908102919091010152600101610100565b505092915050565b6000806040838503121561017457600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156101bb5783518352928401929184019160010161019f565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b818103818111156101fe57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261022157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000816000a";

type RandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Random__factory extends ContractFactory {
  constructor(...args: RandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Random & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Random__factory {
    return super.connect(runner) as Random__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomInterface {
    return new Interface(_abi) as RandomInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Random {
    return new Contract(address, _abi, runner) as unknown as Random;
  }
}
